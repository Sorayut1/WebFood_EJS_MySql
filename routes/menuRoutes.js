// routes/manageMenu.js
// const express = require('express');
// const router = express.Router();
// const multer = require('multer');
// const menuController = require('../controllers/menuController');
// const path = require('path');

// ‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ upload ‡∏†‡∏≤‡∏û
// const storage = multer.diskStorage({
//     destination: (req, file, cb) => {
//         cb(null, './uploads/');
//     },
//     filename: (req, file, cb) => {
//         cb(null, Date.now() + path.extname(file.originalname));
//     }
// });
// const upload = multer({ storage: storage });

// ‡πÄ‡∏™‡πâ‡∏ô‡∏ó‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏°‡∏ô‡∏π
// router.post('/add', upload.single('menu_image'), menuController.addMenu);

// ‡πÄ‡∏™‡πâ‡∏ô‡∏ó‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡πÄ‡∏°‡∏ô‡∏π
// router.get('/menu-types', menuController.getMenuTypes);

// module.exports = router;

// const express = require('express');
// const router = express.Router();
// const db = require('../config/db');

// // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
// router.get('/', async (req, res) => {
//     try {
//         const [rows] = await db.promise().query("SELECT * FROM menu");
//         res.json(rows);
//     } catch (error) {
//         res.status(500).json({ message: "Database error", error });
//     }
// });

// // ‡∏î‡∏∂‡∏á‡πÄ‡∏°‡∏ô‡∏π‡∏ï‡∏≤‡∏° ID
// router.get('/:id', async (req, res) => {
//     try {
//         const [rows] = await db.promise().query("SELECT * FROM menu WHERE menu_id = ?", [req.params.id]);
//         if (rows.length === 0) return res.status(404).json({ message: "Menu not found" });
//         res.json(rows[0]);
//     } catch (error) {
//         res.status(500).json({ message: "Database error", error });
//     }
// });

// // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏°‡∏ô‡∏π‡πÉ‡∏´‡∏°‡πà
// router.post('/', async (req, res) => {
//     const { menu_name, menu_image, price, menu_type, detail_menu } = req.body;
//     try {
//         await db.promise().query("INSERT INTO menu (menu_name, menu_image, price, menu_type, detail_menu) VALUES (?, ?, ?, ?, ?)", 
//             [menu_name, menu_image, price, menu_type, detail_menu]);
//         res.json({ message: "Menu added successfully" });
//     } catch (error) {
//         res.status(500).json({ message: "Database error", error });
//     }
// });

// // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÄ‡∏°‡∏ô‡∏π
// router.put('/:id', async (req, res) => {
//     const { menu_name, menu_image, price, menu_type, detail_menu } = req.body;
//     try {
//         await db.promise().query("UPDATE menu SET menu_name=?, menu_image=?, price=?, menu_type=?, detail_menu=? WHERE menu_id=?", 
//             [menu_name, menu_image, price, menu_type, detail_menu, req.params.id]);
//         res.json({ message: "Menu updated successfully" });
//     } catch (error) {
//         res.status(500).json({ message: "Database error", error });
//     }
// });

// // ‡∏•‡∏ö‡πÄ‡∏°‡∏ô‡∏π
// router.delete('/:id', async (req, res) => {
//     try {
//         await db.promise().query("DELETE FROM menu WHERE menu_id = ?", [req.params.id]);
//         res.json({ message: "Menu deleted successfully" });
//     } catch (error) {
//         res.status(500).json({ message: "Database error", error });
//     }
// });

// module.exports = router;

// const express = require("express");
// const router = express.Router();
// const db = require("../config/db");
// const multer = require("multer");
// const fs = require("fs");
// const path = require("path");

// const uploadDir = path.join(__dirname, "../public/uploads/");
// if (!fs.existsSync(uploadDir)) fs.mkdirSync(uploadDir);

// // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå (‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÑ‡∏ü‡∏•‡πå‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û)
// const storage = multer.diskStorage({
//     destination: (req, file, cb) => cb(null, uploadDir),
//     filename: (req, file, cb) => cb(null, Date.now() + path.extname(file.originalname))
// });

// const fileFilter = (req, file, cb) => {
//     const allowedTypes = ["image/jpeg", "image/png", "image/gif"];
//     if (allowedTypes.includes(file.mimetype)) {
//         cb(null, true);
//     } else {
//         cb(new Error("Invalid file type. Only JPG, PNG, and GIF are allowed."), false);
//     }
// };

// const upload = multer({ 
//     storage, 
//     fileFilter, 
//     limits: { fileSize: 2 * 1024 * 1024 } // ‡∏à‡∏≥‡∏Å‡∏±‡∏î‡∏Ç‡∏ô‡∏≤‡∏î 2MB
// });


// üìå ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏°‡∏ô‡∏π‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
// router.get("/", async (req, res) => {
//     try {
//         const [rows] = await db.promise().query("SELECT * FROM menu");
//         res.json(rows);
//     } catch (error) {
//         res.status(500).json({ message: "Database error", error });
//     }
// });

// router.get("/:id", async (req, res) => {
//     try {
//         const [rows] = await db.promise().query("SELECT * FROM menu WHERE menu_id = ?", [req.params.id]);

//         if (rows.length === 0) return res.status(404).json({ message: "Menu not found" });

//         res.json(rows[0]); // ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏°‡∏ô‡∏π‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ
//     } catch (error) {
//         res.status(500).json({ message: "Database error", error });
//     }
// });



// üìå ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏°‡∏ô‡∏π‡πÉ‡∏´‡∏°‡πà
// router.post("/", upload.single("menu_image"), async (req, res) => {
//     const { menu_name, price, menu_type, detail_menu } = req.body;
//     if (!menu_name || !price || !menu_type) {
//         return res.status(400).json({ message: "Missing required fields" });
//     }
//     const menu_image = req.file ? req.file.filename : null;

//     try {
//         await db.promise().query(
//             "INSERT INTO menu (menu_name, menu_image, price, menu_type, detail_menu) VALUES (?, ?, ?, ?, ?)",
//             [menu_name, menu_image, price, menu_type, detail_menu]
//         );
//         res.json({ message: "Menu added successfully" });
//     } catch (error) {
//         res.status(500).json({ message: "Database error", error });
//     }
// });

// üìå ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÄ‡∏°‡∏ô‡∏π
// router.put("/:id", upload.single("menu_image"), async (req, res) => {
//     const { menu_name, price, menu_type, detail_menu } = req.body;
//     const menu_image = req.file ? req.file.filename : null;
//     const menu_id = req.params.id;

//     try {
//         const [rows] = await db.promise().query("SELECT menu_image FROM menu WHERE menu_id = ?", [menu_id]);
//         if (rows.length === 0) return res.status(404).json({ message: "Menu not found" });

//         const oldImage = rows[0].menu_image;

//         if (menu_image && oldImage) {
//             const oldImagePath = path.join(uploadDir, oldImage);
//             if (fs.existsSync(oldImagePath)) {
//                 try {
//                     fs.unlinkSync(oldImagePath);
//                 } catch (err) {
//                     console.error("Error deleting old image:", err);
//                 }
//             }
//         }

//         await db.promise().query(
//             "UPDATE menu SET menu_name=?, menu_image=?, price=?, menu_type=?, detail_menu=? WHERE menu_id=?",
//             [menu_name, menu_image || oldImage, price, menu_type, detail_menu, req.params.id]
//         );

//         res.json({ message: "Menu updated successfully" });
//     } catch (error) {
//         res.status(500).json({ message: "Database error", error });
//     }
// });





// üìå ‡∏•‡∏ö‡πÄ‡∏°‡∏ô‡∏π
// router.delete("/:id", async (req, res) => {
//     try {
//         const [rows] = await db.promise().query("SELECT menu_image FROM menu WHERE menu_id = ?", [req.params.id]);
//         if (rows.length === 0) return res.status(404).json({ message: "Menu not found" });

//         const menu_image = rows[0].menu_image;
//         if (menu_image) {
//             const imagePath = path.join(uploadDir, menu_image);
//             if (fs.existsSync(imagePath)) {
//                 try {
//                     fs.unlinkSync(imagePath);
//                 } catch (err) {
//                     console.error("Error deleting image:", err);
//                 }
//             }
//         }

//         await db.promise().query("DELETE FROM menu WHERE menu_id = ?", [req.params.id]);
//         res.json({ message: "Menu deleted successfully" });
//     } catch (error) {
//         res.status(500).json({ message: "Database error", error });
//     }
// });

// module.exports = router;

// const express = require("express");
// const router = express.Router();
// const menuController = require("../controllers/menuController");
// const upload = require("../middleware/upload");

// router.get("/", menuController.getMenus);
// router.get("/:id", menuController.getMenu);
// router.post("/", upload.single("menu_image"), menuController.addMenu);
// router.put("/:id", upload.single("menu_image"), menuController.updateMenu);
// router.delete("/:id", menuController.deleteMenu);

// module.exports = router;
const express = require("express");
const router = express.Router();
const menuController = require("../controllers/menuController");
const { upload, deleteOldImage }  = require("../middleware/upload");

// ‡∏≠‡πà‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏°‡∏ô‡∏π‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
// router.get("/", menuController.getAllMenus);

// ‡∏≠‡πà‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏°‡∏ô‡∏π‡∏ï‡∏≤‡∏° ID
// router.get("/:id", menuController.getMenuById);

// ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏°‡∏ô‡∏π‡πÉ‡∏´‡∏°‡πà
// router.post("/", deleteOldImage,upload.single("menu_image"), menuController.createMenu);

// ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÄ‡∏°‡∏ô‡∏π
// router.put("/:id",  upload.single("menu_image"), menuController.updateMenu);
// ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏™‡πâ‡∏ô‡∏ó‡∏≤‡∏á‡πÉ‡∏´‡∏°‡πà‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û

// ‡∏•‡∏ö‡πÄ‡∏°‡∏ô‡∏π
// router.delete("/:id", menuController.deleteMenu);



// ‡∏≠‡πà‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏°‡∏ô‡∏π‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
router.get("/", menuController.getAllMenus);

// ‡∏≠‡πà‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏°‡∏ô‡∏π‡∏ï‡∏≤‡∏° ID
router.get("/:id", menuController.getMenuById);

// ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏°‡∏ô‡∏π‡πÉ‡∏´‡∏°‡πà (‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏•‡∏ö‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡πÄ‡∏Å‡πà‡∏≤)
router.post("/", upload.single("menu_image"), menuController.createMenu);


// üìù ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÄ‡∏°‡∏ô‡∏π (‡∏•‡∏ö‡∏£‡∏π‡∏õ‡πÄ‡∏Å‡πà‡∏≤ + ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÉ‡∏´‡∏°‡πà)
router.put("/:id", deleteOldImage, upload.single("menu_image"), menuController.updateMenu);
  

// ‡∏•‡∏ö‡πÄ‡∏°‡∏ô‡∏π
// router.delete("/:id", deleteOldImage, menuController.deleteMenu);
router.delete("/:id", menuController.deleteMenu);

// router.get('/:id',menuController.getMenuById);



module.exports = router;

